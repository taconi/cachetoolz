[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.poetry]
name = "cachetoolz"
version = "0.0.1"
description = "This library provides a decorator for caching functions"
license = "MIT"
authors = ["Igor Taconi <igor.taconi@protonmail.com>"]
maintainers = ["Igor Taconi <igor.taconi@protonmail.com>"]
readme = "README.md"
homepage = "https://github.com/taconi/cachetoolz/#readme"
repository = "https://github.com/taconi/cachetoolz/"
documentation = "https://taconi.github.io/cachetoolz"
keywords = ["python", "cache", "async", "redis", "mongo"]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Topic :: Utilities",
]
include = ["cachetoolz"]
exclude = ["reports", "docs", "examples", "tests"]

[tool.poetry.urls]
"Bug Tracker" = "https://github.com/taconi/cachetoolz/issues"

[tool.poetry.dependencies]
python = "^3.8.1"
funcy = "^2.0"
nest-asyncio = "^1.5.6"
charset-normalizer = "^3.2.0"
redis = {version = "^4.6.0", optional = true}
motor = {version = "^3.2.0", optional = true}
pymongo = {version = "^4.4.1", optional = true}
typing-extensions = "^4.7.1"
get-annotations = "^0.1.2"

[tool.poetry.extras]
redis = ["redis"]
mongo = ["motor", "pymongo"]

[tool.poetry.group.test.dependencies]
ward = "^0.67.2b0"
coverage = {extras = ["toml"], version = "^7.2.7"}
faker = "^19.1.0"

[tool.poetry.group.dev.dependencies]
ipdb = "^0.13.13"
isort = "^5.12.0"
mccabe = "^0.7.0"
types-redis = "^4.6.0.1"
flake8-html = "^0.4.3"
flake8-docstrings = "^1.7.0"
flake8-bugbear = "^23.6.5"
flake8-pyproject = "^1.2.3"
black = "^23.3.0"
autoflake = "^2.2.0"
docformatter = {extras = ["tomli"], version = "^1.7.3"}


[tool.isort]
multi_line_output = 3
line_length = 79
include_trailing_comma = true

[tool.black]
line_length = 79
skip-string-normalization = true

[tool.flake8]
ignore = ["E121", "E123", "E126", "E226", "E24", "E704", "W503", "W504", "D401"]
max-line-length = 79
max-complexity = 8
docstring-convention = "pep257"
format = "html"
htmltitle = "Flake8 Report"
htmldir = "reports/flake8"

[tool.autoflake]
remove_all_unused_imports = true
ignore_init_module_imports = true
remove_duplicate_keys = true
remove_unused_variables = true

[tool.docformatter]
blank = true
tab-width = 2

[tool.coverage.run]
source = ["cachetoolz"]

[tool.coverage.report]
fail_under = 90
show_missing = true
skip_empty = true
skip_covered = true
sort = "-Cover"
exclude_lines = [
  "no cov",
  "if TYPE_CHECKING:",
  "pragma: no cover",
  "def __repr__",
  "if self.debug",
  "raise AssertionError",
  "raise NotImplementedError",
  "if 0:",
  "if __name__ == .__main__.:",
  "@(abc.)?abstractmethod",
]

[tool.coverage.html]
directory = "reports/coverage"

[tool.ward]
path = ["tests"]
fail-limit = 20
progress-style = ["bar"]
